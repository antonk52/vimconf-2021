local M = {}

function M.setup(options)
    options = options or {}
    local talk_title = options.talk_title or 'vimconf.live 2021'

    vim.o.cursorline = false
    vim.wo.cursorline = false

    local bg_color = vim.g.lake_palette['00'].gui;

    vim.cmd('hi ColorColumn guibg='..bg_color)
    vim.cmd('hi EndOfBuffer guibg=NONE guifg='..bg_color)
    vim.cmd('hi VertSplit guibg='..bg_color..' guifg='..bg_color)
    vim.cmd('hi LineNr guibg='..bg_color..' guifg='..bg_color)
    vim.cmd('hi StatusLine guibg='..bg_color..' guifg=NONE')
    vim.cmd('hi StatusLineNR guibg='..bg_color..' guifg=NONE')
    vim.cmd('hi TabLineFill guibg='..bg_color)
    -- vim.cmd('DimInactiveOff')
    -- enable numbers
    -- though they will be the same color as backgroud for left padding
    vim.o.nu = true

    local win_width = vim.api.nvim_win_get_width(0)
    if win_width > 120 then
        local target_width = math.floor((win_width - 100) / 2)
        -- 20 is the largest number that numberwidth can be
        vim.opt.numberwidth = target_width > 20 and 20 or target_width
    else
        if win_width > 82 then
            local target_width = math.floor((win_width - 80) / 2)
            vim.opt.numberwidth = target_width
        else
            vim.opt.numberwidth = 2
        end
    end
    -- open another tab and go back for the tabline to appear
    vim.cmd('tabnew')
    vim.cmd('tabprev')
    -- set tabline to only display talk title align to the right
    vim.o.tabline='%='..talk_title
    -- enable conceallevel to hide syntax noise
    vim.wo.conceallevel=3

    -- disabled spell all together
    vim.o.spell=false
    vim.wo.spell=false
    vim.o.spelllang=''
    -- force disable spell for all buffers
    vim.cmd('autocmd BufEnter * set nospell')

    -- reset status line
    local calc_max_buffer_number = "len(filter(range(1, bufnr('$')), 'buflisted(v:val)'))-1"
    vim.opt.statusline = '%=slide %n / %{'..calc_max_buffer_number..'}'
    vim.cmd('hi StatusLine guifg=#65737e')

    -- presentation commands
    vim.cmd("command! Halp lua require 'antonk52.halp'.halp()")
    vim.cmd("command! -nargs=? MyCommand lua require 'antonk52.halp'.halp('<args>')")
    vim.cmd("autocmd BufEnter,BufNew,BufWinEnter * IndentBlanklineDisable")

    -- empty command line
    print(' ')
end

local BIG_HELP_46 = [[
                  _    _ ______ _      _____
                 | |  | |  ____| |    |  __ \
  ______ ______  | |__| | |__  | |    | |__) |
 |______|______| |  __  |  __| | |    |  ___/
                 | |  | | |____| |____| |
                 |_|  |_|______|______|_|
]]

local BIG_HELP_122 = [[
                                 HHHHHHHHH     HHHHHHHHHEEEEEEEEEEEEEEEEEEEEEELLLLLLLLLLL             PPPPPPPPPPPPPPPPP   
                                 H:::::::H     H:::::::HE::::::::::::::::::::EL:::::::::L             P::::::::::::::::P  
                                 H:::::::H     H:::::::HE::::::::::::::::::::EL:::::::::L             P::::::PPPPPP:::::P 
                                 HH::::::H     H::::::HHEE::::::EEEEEEEEE::::ELL:::::::LL             PP:::::P     P:::::P
                                   H:::::H     H:::::H    E:::::E       EEEEEE  L:::::L                 P::::P     P:::::P
                                   H:::::H     H:::::H    E:::::E               L:::::L                 P::::P     P:::::P
                                   H::::::HHHHH::::::H    E::::::EEEEEEEEEE     L:::::L                 P::::PPPPPP:::::P 
 --------------- ---------------   H:::::::::::::::::H    E:::::::::::::::E     L:::::L                 P:::::::::::::PP  
 -:::::::::::::- -:::::::::::::-   H:::::::::::::::::H    E:::::::::::::::E     L:::::L                 P::::PPPPPPPPP    
 --------------- ---------------   H::::::HHHHH::::::H    E::::::EEEEEEEEEE     L:::::L                 P::::P            
                                   H:::::H     H:::::H    E:::::E               L:::::L                 P::::P            
                                   H:::::H     H:::::H    E:::::E       EEEEEE  L:::::L         LLLLLL  P::::P            
                                 HH::::::H     H::::::HHEE::::::EEEEEEEE:::::ELL:::::::LLLLLLLLL:::::LPP::::::PP          
                                 H:::::::H     H:::::::HE::::::::::::::::::::EL::::::::::::::::::::::LP::::::::P          
                                 H:::::::H     H:::::::HE::::::::::::::::::::EL::::::::::::::::::::::LP::::::::P          
                                 HHHHHHHHH     HHHHHHHHHEEEEEEEEEEEEEEEEEEEEEELLLLLLLLLLLLLLLLLLLLLLLLPPPPPPPPPP    
]]

local CAT = [[
(//(%((((((((((/((/*(#/(((##(*(//*#((///#(///(((((((/(//((/#*(/#/(/#(((#//(%#/((#/(%(/#((&(%(((%(#(((((#/((/(//(%(((###(
(#/((((((((((((//(//(#######(#//(////#(//(((///(/((//((((/(/(((//%((#(/#((/(/((((%(##(#(((##((##((###((#((((##/(/(/((((#
//((((((/((/(////((//(/(#((((###/(//((#(((/*//////(%(((////(/(/(((((#((((((///(((#((//#(/#(((/((##((%#((((###(#(####(((%
(/(((((((///(/(/(//(/((##(((((((#/(/#/(#(//(/(/*/(***((/(/////(/(/#//((((#(#//(//(((((/#/*/#(#(/(((((((##(##((#((#((((#(
(//((((//(((((//(((/(/(((#(/##/#((((*(/(*////*****/(***(((/(*/*/(((((((/(/(((//(//(((###((#/((((((((/((#(((#((//((#((((#
(#//////(///(////((/(/((((/(/(/(#((((/##/(#//(((///*****/*/#/(((/(((#(#(//((((((((((/(/((/(//((//#//(##/(((((#/#((#(#((#
*//**/(*(//////*//**#((//////(///((/(//(*#(/**((/#*///****/**///*((/((//(#/((/(/(((/((//(/%//(////(((/(#/(((((/(#(((((#(
/***////*////**,****/(/*/(///(##/***,,.,*,..*/((((###**(*/**/*/*//**/**//(((/(/(/(/(/(//(/(((/(///(///(///(((#(##(##((#%
//**//(/*//*//******/(////(///((/(,*,*//*****#/(/#(/(#///*/*///**/**/*/(**(/(#/((//*/((%(((/#/(/(###(/(((/((/((/(((((#(#
/((**/**//*/**///*/*/(((#((//(((((**///***,../(////%//*/*/#//#&#**/***(*//////(*//(((/(/////(/(/#(/(((/(/((((#(//(((#(##
//*((/*/***/////**/////(###((#(/(#*,,,......,(((/////*/*//*/*/@@@%****//,**,//****/////(#%(//*#(/(((#/#(/((%(#((((/((#(/
**#*//*****/**////(/*/(/(%###///((/,........./(/***/*/*/////**#@@@@%/**//****/**//*/**////(*/(((((/##(((/#%(#(((%((#((((
(*/(/**(//*//***/*/////((#///(#(#%/,.........*//*/*//**/(*/*,,*(@@@&%%/**/****/,(///**/(/////((//(/(/(///#(((((((((#((((
(*///*//*(*/*//**/((//#(#(((((//(//,,,.......(*/#(/(///#((*//*/((@@@@@@@&/*,****//*****%#//(////#//(((((#/(#(((/(((#(%((
*(****/**,,/*(*/(//(**///((#%##((#/,....  ...*,***((((#((((*,,*(%&#&@@&&%%#(((//**,*//((**,/*/(/(/##((/(##(((###(#//((/(
//,//*,,#/*////****//%(/*(#%#%&&%(*.. .   ...,/(##%#%%%##///*//#&##%%&%&&&@&@&@@%/*////(//(*(******/*/((/((((((((#((((((
/**(***/**//(/*/(/***/(/#/#&&%(((//.      ...(*#***((/(##((#(///(#/((%/.*((%%&&@@@@@&/*/**//****//**////*//(((///(////#%
/*(**(/*//****/*///*///((////(((#/(.... ....,*///(/(#/**/**,......    .(&@&%@&&&@@@@@@@&#/**//(##(*/**//(#////////(/(///
*///*****/(/*/*/*((,///,//,/*(/(//(,... . ..,(#/((((,......   ..   .,&#&%@@%&&&%@&@%#@@@@%%#(////((/*,,/*/*#/(*/#////((/
//***,*///*(****/*//((((/**,//**///#(*////*(/(/%((*,..   .##/..   .*#@@((%@&%&%%%%%&@@&&(/*////(#((/****/**/*(((/(/(%#((
/////**(,///*/(*,*,*//*(/***(*//*((****,//**/((#/*...    .%@%(.   .*#///#@@&(%%##%#%%(((***///((///****////*,((/(#(((*(/
(*/*/(/*///*****/(#*(/(*/,**/**///*,/*,,,****/((*,....     ...     ,,**%%((%&%#(#((**/(*,*,*(*//*/****/*/////(/(//(///#/
,***///(/*(*(,//*///((/*,**//*///*******,**//(*##*,,,........      .,#@&&&%(/(///(//,.,.,*#/*,,//*,*/**/**/(//(/(//////(
*/*/(/*//*//(*/(*//#/******//**/(/*/****,/*,*///(#/*,,...,.. .   .,&#/*%%&(%%/(&@%//.....,*,.,/((***/(/*/*******(*//**//
(*//***(*,(/*//(**(*/**/,****(/(/*/**,//***/,***/#(#/,.../*((,.             .....,,.       .***//,**,*//(//(**//(/****//
*#/**(*//***//**/*,(///*****/*((((*/(*/*(*/*****///*/**,,/,.                           .,,//(/#///*/(*//(*//*/(//***//**
(,**,**///****//**/*#*,/***//*//*/*(**(,******/****(,***,***,..         ..        ..,,**#(/*/**///,(##*///((/********(//
*,**/,/****/*//*//****/**,*//(///(//*/**,***/*/*,,*(/***/**(*,,**,,,.,,/,*,,,,,*(/,/(#/*#**,((/(/////*(/**/*/,//*****,**
//*/*,,**(*(*****,*,*(*/**,**/******//,,*,**(////**,////#/,(/***,,,*****,*/**(//*/(*,/((*****(/#(*/**(**//*,*,**(***//(/
***(,**/*(**(/*/**(*,*/*/*//*,**(*(//**//*,/,///.*(***(/***//***//,*/*,/(/#*//(,//(#*#/(((**/#*,/*/#(*****/**/,*//(//**,
,(/**,***,****#*,*/,*/(**/*(/,,*/(*/*(******,*****/**(*/.*#*/(/**/*/*/(*//##(((*(*/*#///(/*(/*(/*//(*/*/*****,(/*((*,**/
*/,*/**(*/////*/,*******//,,,**,**,**(*(//*,,/*///*,**((/(/*(*(////*,*///(##((((/((/((///*,**,*,,***//(/****(*(((****//*
/**/***/,*,*/*,,*,***,,*///*,/********(/*/*///**(**//,,/*,/*****,,,,**///,**(((#(#((/((*,.,******,,*(**,*/*///*///////*/
(/*/%****#(****////*,,*********/*,*//*(//****,,//*****/***(*/****//,****#(/(/#%(/(#/*,,...,**//**,*(/*/**/**/**//*(//**/
**((***,/(**,***/(/*,(/,*****///*/,**/*#/****,*,,,//**(*(/(/*//*/****/**/(*//(/((#*.........,******//***((/**///(/*////,
*(,***///,/*#(/,,*,*,/*//*//*/**,,(*/#/#(**/,,***/*/**/**/***(**/,*/**,**/////*((/(,........,,*(##**(//(%//(//*//((//*((
,/,*,**(/,/*,*/,***(*//(/*(((/*,****/((/#/**/**//*/***/*,(//#/**/,(//*//***/,(**(//*..,,*,.*,/(/*(/(*/**,(//(/#/*//#/*/(
***/(//(***/**/*******(((#/,*/***/*(///((/((*/**#//**/(*/**,*****/*****/**/,,/*/*,//(/(//(*,/(/(/*/#(//(((/////#/(/#(((/
*/(/*,*,**/*,/**//(/(//*,*,//*/*/(/*(((//(**#///*,*,,**/,*****//*,/***//***/*/**,*/**/***(//*/((/(//((*,(#*/(*///(%%(/(/
/**/****,**((////,/***********@@@@@@@/&@@@@@@@*,,&@@@@@@@@@@*//(@@@@@@@/*/((@@@@@@@@@@&(**//(/,*(*##(**////(#///*(/#((((
**//*,/**(/(/****.****/**/(*,/@     @*@.     @,**@         @/(*/@     @((#//@            @*/*/*/*/,******(/*(((#**(//#(/
***(/**//****,,,*//***,,**(*(/@     @*@.     @(/(%         (#***@     @**(*(@     &%@     @/*/*/(*/(*/((/((,******//(*#%
//#(/,,/*,,,/***(//***,*,*,***@     @(@.     @*/&,    @*    @*//@     @/*//*@     &/&*    @*//(*/*/(/(/**(**(,/#**((//*/
*/*/#*//*//*//*(/*,,,,**,/***/@     ,,,      @(/@    .@&    @(*/@     @/*((*@     &/&,    @/#/**/(/*///*#/*(#*///(///#%(
/*///(/*((****/*,/,//****/,/**@              @((@    /%@    *&/#@     @/**/*@            ,@*#//*/(#//*(#(#(/*(//(#(/(#%#
//*/(,,**,,,*,*,*,,/(/**////**@     @@@.     @*@,    @&@     @//@     @/(*(/@     ,.,*(@@(/*((/(*(///(/(#*/*/(*(/((((/#%
#///(#******,**,**////**/*///#@     @/@.     @%@     ...     &/*@     @*(///@     &/****((///((//#*///(///#**/*/////%%#*
/((//(/(/((#**/*/**/////#**(*/@     @/@.     @(@             ,&(@     @/#*,*@     &(//*(/////#(((///*/(/((///*//((((**/(
/####(#%(///#/((**,*(#/**(##(*@     @(@.     @&,     @/(#     @/@         @(@     &/**//(/(//(/##///(/**//*/(///((*/(,/(
((%//%//#*/(((#(((,#(/#/*/((/(@     @/@.     @@      @*/@     %#@         @/@     &((/*/#/**/*(*((*////**/(*/***/#/*/,*/
##(((#%#%*//*(#%%**/(%#/*//###//(#/(///***(,/(*/**(#*///*,((#/*/*****/**///%*(///*,((/*///*/(/(/#*(#*//,((/(*///***(/**/
]]
function M.halp(arg)
    if arg == '' then
        local current_win_width = vim.api.nvim_win_get_width(0);

        local hint = '\n \n \nCall MyCommand with "cat" argument\n '

        if current_win_width >= 122 then
            print(BIG_HELP_122..hint)
        else
            print(BIG_HELP_46..hint)
        end

        return nil
    elseif arg == 'cat' then
            print(CAT)
    end
end

return M
